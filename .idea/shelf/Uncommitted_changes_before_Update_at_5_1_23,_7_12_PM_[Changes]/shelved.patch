Index: templates/ReviewForm.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!-- Extending base code to use Jinja principles -->\n{% extends \"base.html\" %}\n\n{% block title %}Review Form{% endblock %}\n\n{% block html_head %}\n    <div class=\"GenProduct_HeadingSpacer\"></div>\n    <strong>Leave a Review</strong>\n{% endblock %}\n\n{% block page_content %}\n\n    <!-- Add padding between top of the page and contents within the table -->\n    <div class=\"GenProduct_HeadingSpacer\"></div>\n    <!-- Centers and bolds heading text for the page -->\n    <div class = \"h1-Center\">\n        <!-- Heading text for entire webpage  -->\n        <h4>Enjoying our products? Let us know by leaving a review below!</h4>\n    </div>\n    <div class=\"GenProduct_HeadingSpacer\"></div>\n    <!-- Create two column layout to house form and photo side by side-->\n    <div class = \"GenProduct_rowLayout\">\n        <div class=\"GenProduct_columnLayout\">\n             <!--Placing image on left hand column-->\n            <img src=\"../static/images/Reviews_FormPhoto.png\" width = \"450\" height = \"470\" alt=\"ATB Model on a Keg\" style = \"padding-left: 20px\">\n        </div>\n        <!-- create new, right-handed side column-->\n        <div class=\"GenProduct_columnLayout\">\n        <!-- adds passing between both columns to evenly space information -->\n        <div class = \"GenProduct_VerticalSpacer\">\n        <!-- conditional formatting to show confirmation message to users after completing the form -->\n            <div class = \"GenProduct_VerticalRightSpacer\">\n\n        <!--Creates form to collection customer's requests-->\n        <form action=\"{{ url_for('ReviewForm') }}\" method=\"post\">\n        <div class=\"inputBoxTotal\" style=\"padding-left: 24px\">\n            <div class=\"row\">\n                <!--Styling for each of the boxes, background color of form and buttons used within form -->\n                <div class=\"border-box col\">\n                    <div class=\"formInputFields\">\n                        {% if current_user.is_authenticated %}\n                            <div class = \"row\">\n                                <!--Field to collect users message -->\n                                <p class=\"formFieldsLabels\">Review(*)</p>\n                                <input type=\"text\" class=\"inputFields\" name=\"message\" required rows=\"5\"><br><br>\n                            </div>\n                            <div class = \"row\">\n                                <p class=\"formFieldsLabels\">Rating(*)</p>\n                                <div class=\"form-select-container\">\n                                    <select name=\"rating\" id=\"role\" class=\"form-select\" aria-label=\".form-select-md example\">\n                                        <option value=\"0\">---Select A Rating---</option>\n                                        <option name=\"one\" id=\"one\" value=\"1\">1</option>\n                                        <option name=\"two\" id=\"two\" value=\"2\">2</option>\n                                        <option name=\"three\" id=\"three\" value=\"3\">3</option>\n                                        <option name=\"four\" id=\"four\" value=\"4\">4</option>\n                                        <option name=\"five\" id=\"five\" value=\"5\">5</option>\n                                    </select>\n                                </div>\n                            </div>\n                        {% else %}\n                        <div class = \"row\">\n                            <div class=\"border-box col\">\n                                <div class=\"row\" style=\"padding-right: 15px\">\n                                    <!--Field to collect users first name -->\n                                    <p class=\"formFieldsLabels\">First Name(*)<br></p>\n                                    <input type=\"text\" class=\"inputFields\" name=\"first_name\" required>\n                                </div>\n                            </div>\n                            <div class=\"border-box col\">\n                                <div class=\"row\" style=\"padding-left: 15px\">\n                                    <!--Field to collect users last name -->\n                                    <p class=\"formFieldsLabels\">Last Name(*)<br></p>\n                                    <input type=\"text\" class=\"inputFields\" name=\"last_name\" required><br><br>\n                                </div>\n                            </div>\n                        </div>\n                        <div class = \"row\">\n                            <!--Field to collect users email -->\n                            <p class=\"formFieldsLabels\">Email(*)</p>\n                            <input type=\"email\" class=\"inputFields\" name=\"email\" required><br><br>\n                        </div>\n\n                        <div class = \"row\">\n                            <!--Field to collect users message -->\n                            <p class=\"formFieldsLabels\">Review(*)</p>\n                            <input type=\"text\" class=\"inputFields\" name=\"message\" required><br><br>\n                        </div>\n                        <div class = \"row\">\n                            <p class=\"formFieldsLabels\">Rating(*)</p>\n                            <div class=\"form-select-container\">\n                                <select name=\"rating\" id=\"role\" class=\"form-select\" aria-label=\".form-select-md example\">\n                                    <option value=\"0\">---Select A Rating---</option>\n                                    <option name=\"one\" id=\"one\" value=\"1\">1</option>\n                                    <option name=\"two\" id=\"two\" value=\"2\">2</option>\n                                    <option name=\"three\" id=\"three\" value=\"3\">3</option>\n                                    <option name=\"four\" id=\"four\" value=\"4\">4</option>\n                                    <option name=\"five\" id=\"five\" value=\"5\">5</option>\n                                </select>\n                            </div>\n                        </div>\n                     {% endif %}\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class = \"vertical-center\">\n                        <!--Field to submit the users answers inputted into the form -->\n                        <input type=\"submit\" value=\"Submit Review\" class=\"checkoutButtons\" style=\"float: right; margin: 20px; padding: 7px 75px 7px 75px;\">\n                    </div>\n                </div>\n            </div>\n        </div>\n                </form>\n                </div>\n                </div>\n                </div>\n    </div>\n\n    <!-- adds spacing between bottom of all text content and footer -->\n    <div class=\"GenProduct_HeadingSpacer\"></div>\n\n      <div class = \"h1-Center\">\n        <!-- Heading text for entire webpage  -->\n        <h1>Read Reviews</h1>\n        <h4>Interested to see what others think? Read some of our reviews below!</h4>\n    </div>\n    <div class=\"GenProduct_HeadingSpacer\"></div>\n\n    <!-- Creation of table to show all posted reviews -->\n{#    <div class=\"cartPlaceholder\" style=\"position: relative; height: auto; min-height: 100%; padding-bottom: 7px;\">#}\n{#                <div class=”cartHeader”>#}\n{#                    {% for each_review in reviews %}#}\n{#                        <div class=\"cart-item\">#}\n{#                            <!-- display reviewers name -->#}\n{#                            <div class=\"cart-item-details\">#}\n{#                                <div class=\"cart-item-title\">#}\n{#                                    <td>{{ each_review['first_name'] }}</td>#}\n{#                                    <td>{{ each_review['last_name'] }}</td>#}\n{#                                    <td>{{ each_review['email'] }}</td>#}\n{#                                </div>#}\n{#                            </div>#}\n{#                             <!-- display reviewers written review -->#}\n{#                            <div class=\"cart-item-details\">#}\n{#                                <div class=\"cart-item-title\">#}\n{#                                    <td>{{ each_review['message'] }}</td>#}\n{#                                </div>#}\n{#                            </div>#}\n{#                            <!-- display reviewers numeric score -->#}\n{#                            <div class=\"cart-item-details\">#}\n{#                                <div class=\"cart-item-title\">#}\n{#                                    <td>{{ each_review['rating'] }}</td>#}\n{#                                </div>#}\n{#                            </div>#}\n{#                            </div>#}\n{#                     {% endfor %}#}\n{#                </div>#}\n{#            </div>#}\n    <!-- adds spacing between bottom of all text content and footer -->\n    <div class=\"GenProduct_HeadingSpacer\"></div>\n\n     {% for each_review in review %}\n       {% if each_review['posted'] == 1 %}\n           <td>{{ each_review['first_name'] }}</td>\n           <td>{{ each_review['last_name'] }}</td>\n           <td class=\"wrap\"><pre>Review: {{ each_review['message'] }}</pre></td>\n           <td><pre>Stars: {{ each_review['rating'] }}/5</pre></td>\n           <br>\n        {% endif %}\n       </tr>\n    {% endfor %}\n\n{% endblock %}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/ReviewForm.html b/templates/ReviewForm.html
--- a/templates/ReviewForm.html	(revision 321a746c31d68b1b7e038d305be9d93bd1084060)
+++ b/templates/ReviewForm.html	(date 1682982425984)
@@ -38,13 +38,15 @@
                 <!--Styling for each of the boxes, background color of form and buttons used within form -->
                 <div class="border-box col">
                     <div class="formInputFields">
+                        <!--If user is logged in, they will see an abbreviated form as we can already gather certain information  -->
                         {% if current_user.is_authenticated %}
                             <div class = "row">
                                 <!--Field to collect users message -->
                                 <p class="formFieldsLabels">Review(*)</p>
-                                <input type="text" class="inputFields" name="message" required rows="5"><br><br>
+                                <textarea rows="5" cols="20" placeholder="Enter your review here!" name="message" require></textarea>
                             </div>
                             <div class = "row">
+                                <!--Field to collect users ratings out of 5 on products purchased -->
                                 <p class="formFieldsLabels">Rating(*)</p>
                                 <div class="form-select-container">
                                     <select name="rating" id="role" class="form-select" aria-label=".form-select-md example">
@@ -57,6 +59,7 @@
                                     </select>
                                 </div>
                             </div>
+                         <!--If user is NOT logged in, they will see more fields on the form  -->
                         {% else %}
                         <div class = "row">
                             <div class="border-box col">
@@ -83,9 +86,10 @@
                         <div class = "row">
                             <!--Field to collect users message -->
                             <p class="formFieldsLabels">Review(*)</p>
-                            <input type="text" class="inputFields" name="message" required><br><br>
+                            <textarea rows="5" cols="20" placeholder="Enter your review here!" name="message" require></textarea>
                         </div>
                         <div class = "row">
+                            <!--Field to collect users numeric rating-->
                             <p class="formFieldsLabels">Rating(*)</p>
                             <div class="form-select-container">
                                 <select name="rating" id="role" class="form-select" aria-label=".form-select-md example">
@@ -115,57 +119,56 @@
                 </div>
     </div>
 
-    <!-- adds spacing between bottom of all text content and footer -->
+    <!-- adds spacing between form section and posted reviews section -->
     <div class="GenProduct_HeadingSpacer"></div>
 
       <div class = "h1-Center">
-        <!-- Heading text for entire webpage  -->
-        <h1>Read Reviews</h1>
+        <!-- Heading text for second half of the webpage  -->
+        <h2><strong>Read Reviews</strong></h2>
         <h4>Interested to see what others think? Read some of our reviews below!</h4>
     </div>
-    <div class="GenProduct_HeadingSpacer"></div>
 
-    <!-- Creation of table to show all posted reviews -->
-{#    <div class="cartPlaceholder" style="position: relative; height: auto; min-height: 100%; padding-bottom: 7px;">#}
-{#                <div class=”cartHeader”>#}
-{#                    {% for each_review in reviews %}#}
-{#                        <div class="cart-item">#}
-{#                            <!-- display reviewers name -->#}
-{#                            <div class="cart-item-details">#}
-{#                                <div class="cart-item-title">#}
-{#                                    <td>{{ each_review['first_name'] }}</td>#}
-{#                                    <td>{{ each_review['last_name'] }}</td>#}
-{#                                    <td>{{ each_review['email'] }}</td>#}
-{#                                </div>#}
-{#                            </div>#}
-{#                             <!-- display reviewers written review -->#}
-{#                            <div class="cart-item-details">#}
-{#                                <div class="cart-item-title">#}
-{#                                    <td>{{ each_review['message'] }}</td>#}
-{#                                </div>#}
-{#                            </div>#}
-{#                            <!-- display reviewers numeric score -->#}
-{#                            <div class="cart-item-details">#}
-{#                                <div class="cart-item-title">#}
-{#                                    <td>{{ each_review['rating'] }}</td>#}
-{#                                </div>#}
-{#                            </div>#}
-{#                            </div>#}
-{#                     {% endfor %}#}
-{#                </div>#}
-{#            </div>#}
     <!-- adds spacing between bottom of all text content and footer -->
     <div class="GenProduct_HeadingSpacer"></div>
 
-     {% for each_review in review %}
-       {% if each_review['posted'] == 1 %}
-           <td>{{ each_review['first_name'] }}</td>
-           <td>{{ each_review['last_name'] }}</td>
-           <td class="wrap"><pre>Review: {{ each_review['message'] }}</pre></td>
-           <td><pre>Stars: {{ each_review['rating'] }}/5</pre></td>
-           <br>
-        {% endif %}
-       </tr>
-    {% endfor %}
+    <!-- Creation of table to show all posted reviews -->
+    <div class="cartPlaceholder" style="position: relative; height: auto; min-height: 100%; padding-bottom: 7px;">
+        <table class="table table-striped">
+            <div class="row">
+            <div class="col">
+            <tr>
+                <th scope="col">First Name</th>
+                <th scope="col">Last Name</th>
+                <th scope="col">Message</th>
+                <th scope="col">Rating</th>
+            </tr>
+
+            {% for each_review in reviews %}
+                {% if each_review['posted'] == 1 %}
+                    <tr>
+                        <td> {{ each_review['first_name'] }}</td>
+                        <td> {{ each_review['last_name'] }}</td>
+                        <td class = "wrap"> {{ each_review['message'] }}</td>
+                        <td> {{ each_review['rating'] }}</td>
+                {% endif %}
+                </tr>
+             {% endfor %}
+        </table>
+       </div>
+    </div>
+
+    <!-- adds spacing between bottom of all text content and footer -->
+    <div class="GenProduct_HeadingSpacer"></div>
+
+{#     {% for each_review in review %}#}
+{#       {% if each_review['posted'] == 1 %}#}
+{#           <td>{{ each_review['first_name'] }}</td>#}
+{#           <td>{{ each_review['last_name'] }}</td>#}
+{#           <td class="wrap"><pre>Review: {{ each_review['message'] }}</pre></td>#}
+{#           <td><pre>Stars: {{ each_review['rating'] }}/5</pre></td>#}
+{#           <br>#}
+{#        {% endif %}#}
+{#       </tr>#}
+{#    {% endfor %}#}
 
 {% endblock %}
\ No newline at end of file
Index: models.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from flask_sqlalchemy import SQLAlchemy\nfrom flask_login import UserMixin\ndb = SQLAlchemy()\n\n\nclass User(db.Model):\n   __tablename__ = \"User\"\n\n   user_id = db.Column(db.Integer, primary_key=True)\n   account_id = db.Column(db.Integer, db.ForeignKey('Credentials.account_id'))\n   first_name = db.Column(db.String(30), nullable=False)\n   last_name = db.Column(db.String(50), nullable=False)\n   email = db.Column(db.String(60), nullable=False)\n\n\n   def __init__(self, first_name, last_name, email):\n       self.first_name = first_name\n       self.last_name = last_name\n       self.email = email\n\n\n   def __repr__(self):\n       return f\"{self.first_name} {self.last_name} {self.email} {self.address} {self.state}\"\n\n\nclass ShippingInfo(db.Model):\n   __tablename__ = \"ShippingInfo\"\n\n   ship_id = db.Column(db.Integer, primary_key=True)\n   user_id = db.Column(db.Integer, db.ForeignKey('User.user_id'), primary_key=True)\n   address = db.Column(db.String(100), nullable=False)\n   state = db.Column(db.String(2), nullable=False)\n   zipcode = db.Column(db.Integer, nullable=False)\n   phoneNumber = db.Column(db.Integer, nullable=False)\n\n\n   def __init__(self, address, state, zipcode, phoneNumber):\n       self.address = address\n       self.state = state\n       self.zipcode = zipcode\n       self.phoneNumber = phoneNumber\n\n\n   def __repr__(self):\n       return f\" {self.address} {self.state}\"\n\nclass Requests(db.Model):\n   __tablename__ = \"Requests\"\n\n   request_id = db.Column(db.Integer, primary_key=True)\n   account_id = db.Column(db.Integer, db.ForeignKey('Credentials.account_id'), nullable=True)\n   first_name = db.Column(db.String(30), nullable=True)\n   last_name = db.Column(db.String(50), nullable=True)\n   email = db.Column(db.String(60), nullable=True)\n   message = db.Column(db.String(200), nullable=False)\n\n   def __init__(self, account_id, first_name, last_name, email, message):\n       self.account_id = account_id\n       self.first_name = first_name\n       self.last_name = last_name\n       self.email = email\n       self.message = message\n\n   def __repr__(self):\n       return f\"{self.first_name}{self.last_name}{self.message}\"\n\nclass OrderInfo(db.Model):\n   __tablename__ = \"OrderInfo\"\n\n   order_id = db.Column(db.Integer, primary_key=True)\n   customer_id = db.Column(db.Integer, db.ForeignKey('User.user_id'))\n   shipping_mode = db.Column(db.String(30), nullable=False)\n   order_total = db.Column(db.Float, nullable=False)\n   def __init__(self, customer_id, shipping_mode, order_total, date) :\n       self.customer_id = customer_id\n       self.shipping_mode = shipping_mode\n       self.order_total = order_total\n       self.date = date\n   def __repr__(self):\n       return f\"{self.shipping_mode}\"\n\nclass InventoryInfo(db.Model):\n   __tablename__ = \"InventoryInfo\"\n\n\n   product_id = db.Column(db.Integer, primary_key=True)\n   collection_id = db.Column(db.Integer, db.ForeignKey('Collections.collection_id'))\n   item_name = db.Column(db.String(20), nullable=False)\n   xsmall = db.Column(db.Integer, nullable=False)\n   small = db.Column(db.Integer, nullable=False)\n   medium = db.Column(db.Integer, nullable=False)\n   large = db.Column(db.Integer, nullable=False)\n   xlarge = db.Column(db.Integer, nullable=False)\n   xxlarge = db.Column(db.Integer, nullable=False)\n   price = db.Column(db.Integer, nullable=False)\n   desc = db.Column(db.String(50), nullable=False)\n   image = db.Column(db.String(100))\n\n\n   def __init__(self, item_name, xsmall, small, medium, large, xlarge, xxlarge, price, desc, image):\n       self.item_name = item_name\n       self.xsmall = xsmall\n       self.small = small\n       self.medium = medium\n       self.large = large\n       self.xlarge = xlarge\n       self.xxlarge = xxlarge\n       self.price = price\n       self.desc = desc\n       self.image = image\n\n\n   def __repr__(self):\n       return f\"{self.item_name}  {self.desc}\"\n\n\nclass Cart(db.Model):\n    __tablename__ = \"Cart\"\n\n    order_id = db.Column(db.Integer, db.ForeignKey('OrderInfo.order_id'), primary_key=True)\n    product_id = db.Column(db.Integer, db.ForeignKey('InventoryInfo.product_id'), primary_key=True)\n\n    def __init__(self, order_id, product_id) :\n        self.order_id = order_id\n        self.product_id = product_id\n\n\nclass Collections(db.Model):\n    __tablename__ = \"Collections\"\n\n    collection_id = db.Column(db.Integer, primary_key=True)\n    collection_name = db.Column(db.String(20), nullable=True)\n\n    def __init__(self, collection_name) :\n        self.collection_name = collection_name\n    def __repr__(self):\n       return f\"{self.collection_name}\"\n\n\nclass Credentials(UserMixin, db.Model):\n    __tablename__ = \"Credentials\"\n\n    account_id = db.Column(db.Integer, primary_key=True)\n    username = db.Column(db.String(40), unique=True, nullable=False)\n    password = db.Column(db.String(40), nullable=False)\n    first_name = db.Column(db.String(30), nullable=False)\n    last_name = db.Column(db.String(50), nullable=False)\n    email = db.Column(db.String(100), unique=True, nullable=False)\n    role = db.Column(db.String(10), nullable=False)\n\n    def __init__(self, username, password, first_name, last_name, email, role='STUDENT'):\n        self.username = username\n        self.password = password\n        self.first_name = first_name\n        self.last_name = last_name\n        self.email = email\n        self.role = role\n\n    def get_id(self):\n        return (self.account_id)\n\n    def __repr__(self):\n       return f\"({self.username}){self.password}{self.role}\"\n\n   # Only execute once! Initial load of sizes\n   #db.engine.execute(\"INSERT INTO sizes(size) VALUES ('XS');\")\n\nclass Reviews(db.Model):\n    __tablename__ = \"Reviews\"\n\n    review_id = db.Column(db.Integer, primary_key=True)\n    account_id = db.Column(db.Integer, db.ForeignKey('Credentials.account_id'), nullable=True)\n    first_name = db.Column(db.String(30), nullable=True)\n    last_name = db.Column(db.String(50), nullable=True)\n    email = db.Column(db.String(60), nullable=True)\n    message = db.Column(db.String(200), nullable=False)\n    rating = db.Column(db.String(20), nullable=False)\n    posted = db.Column(db.Boolean, default=False)\n\n    def __init__(self, account_id, first_name, last_name, email, message, rating, posted):\n        self.account_id = account_id\n        self.first_name = first_name\n        self.last_name = last_name\n        self.email = email\n        self.message = message\n        self.rating = rating\n        self.posted = posted\n\n    def __repr__(self):\n        return f\"{self.first_name}{self.last_name}{self.message}\"\n\n# class approvedReviews(db.Model):\n#     __tablename__ = \"approvedReviews\"\n#\n#     review_id = db.Column(db.Integer, primary_key=True)\n#     account_id = db.Column(db.Integer, db.ForeignKey('Credentials.account_id'), nullable=True)\n#     first_name = db.Column(db.String(30), nullable=True)\n#     last_name = db.Column(db.String(50), nullable=True)\n#     email = db.Column(db.String(60), nullable=True)\n#     message = db.Column(db.String(200), nullable=False)\n#     rating = db.Column(db.String(20), nullable=False)\n#\n#     def __init__(self, account_id, first_name, last_name, email, message, rating):\n#         self.account_id = account_id\n#         self.first_name = first_name\n#         self.last_name = last_name\n#         self.email = email\n#         self.message = message\n#         self.rating = rating\n\n    #\n    # def __repr__(self):\n    #     return f\"{self.first_name}{self.last_name}{self.message}\"\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/models.py b/models.py
--- a/models.py	(revision 321a746c31d68b1b7e038d305be9d93bd1084060)
+++ b/models.py	(date 1682981217458)
@@ -188,26 +188,4 @@
 
     def __repr__(self):
         return f"{self.first_name}{self.last_name}{self.message}"
-
-# class approvedReviews(db.Model):
-#     __tablename__ = "approvedReviews"
-#
-#     review_id = db.Column(db.Integer, primary_key=True)
-#     account_id = db.Column(db.Integer, db.ForeignKey('Credentials.account_id'), nullable=True)
-#     first_name = db.Column(db.String(30), nullable=True)
-#     last_name = db.Column(db.String(50), nullable=True)
-#     email = db.Column(db.String(60), nullable=True)
-#     message = db.Column(db.String(200), nullable=False)
-#     rating = db.Column(db.String(20), nullable=False)
 #
-#     def __init__(self, account_id, first_name, last_name, email, message, rating):
-#         self.account_id = account_id
-#         self.first_name = first_name
-#         self.last_name = last_name
-#         self.email = email
-#         self.message = message
-#         self.rating = rating
-
-    #
-    # def __repr__(self):
-    #     return f"{self.first_name}{self.last_name}{self.message}"
Index: app.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import os\nfrom flask import Flask, render_template, request, redirect, url_for, flash, session\nfrom flask_login import LoginManager, login_user, login_required, logout_user, current_user\nfrom werkzeug.security import check_password_hash, generate_password_hash\nfrom werkzeug.utils import secure_filename\nfrom authorize import role_required\nfrom models import *\n\nbasedir = os.path.abspath(os.path.dirname(__file__))\n\napp = Flask(__name__)\napp.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///' + os.path.join(basedir, 'ATB2.db')\napp.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False\napp.config['SECRET_KEY'] = 'beyond_course_scope'\ndb.init_app(app)\n\n\nlogin_manager = LoginManager()\nlogin_manager.login_view = 'LogIn' # default login route\nlogin_manager.init_app(app)\n\n# Product image parameters\napp.config['PRODUCT_UPLOAD_PATH'] = 'static/products'\n\n# Product order restrictions\napp.config['MAX_QUANTITY_PER_ITEM'] = 99\n\n@login_manager.user_loader\ndef load_user(account_id):\n   return Credentials.query.get(account_id)\n\n@app.route('/')\ndef homePage():\n    return render_template('Home Page.html')\n\n@app.route('/404')\ndef errorPage():\n    return render_template('Inventory.html'), 404\n\n@app.route('/Shop')\ndef Shop():\n    items = InventoryInfo.query.order_by(InventoryInfo.item_name).all()\n    return render_template('Shop.html', items=items)\n\n# @app.route('/EnterItems')\n# def EnterItems():\n#     return render_template('Input_Inventory.html')\n\n@app.route('/About')\ndef About():\n    return render_template('About Page.html')\n\n\n@app.route('/profile')\ndef Profile():\n    return render_template('profile.html')\n\n@app.route('/RequestForm', methods=['GET', 'POST'])\ndef RequestForm():\n    if request.method == 'GET':\n        return render_template('RequestForm.html', action='create')\n    elif request.method == 'POST':\n\n        if current_user.is_authenticated:\n\n            account_id = current_user.account_id\n            first_name = current_user.first_name\n            last_name = current_user.last_name\n            email = current_user.email\n            message = request.form['message']\n\n            requests = Requests(account_id=account_id, first_name=first_name, last_name=last_name, email=email, message=message)\n\n        else:\n            account_id = None\n            first_name = request.form['first_name']\n            last_name = request.form['last_name']\n            email = request.form['email']\n            message = request.form['message']\n\n            requests = Requests(account_id=account_id, first_name=first_name, last_name=last_name, email=email, message=message)\n\n        db.session.add(requests)\n        db.session.commit()\n\n        flash(f'Your request was received!', 'success')\n        return redirect(url_for('RequestForm'))\n\n    # Address issue where unsupported HTTP request method is attempted\n    flash(f'Invalid request. Please contact support if this problem persists.', 'error')\n    return redirect(url_for('homePage'))\n\n@app.route('/RequestsLog/Delete/<int:request_id>')\n@login_required\n@role_required(['ADMIN'])\ndef requests_fulfilled(request_id):\n   request = Requests.query.filter_by(request_id=request_id).first()\n   if request:\n       db.session.delete(request)\n       db.session.commit()\n       flash(f'{request_id} was successfully deleted!', 'success')\n   else:\n       flash(f'Delete failed! Collection could not be found.', 'error')\n\n   return redirect(url_for('requests_view_all'))\n\n@app.route('/ReviewForm', methods=['GET', 'POST'])\ndef ReviewForm():\n    review = Reviews.query.order_by(Reviews.review_id) \\\n        .all()\n    if request.method == 'GET':\n        return render_template('ReviewForm.html', action='create', review=review)\n    elif request.method == 'POST':\n\n        if current_user.is_authenticated:\n\n            account_id = current_user.account_id\n            first_name = current_user.first_name\n            last_name = current_user.last_name\n            email = current_user.email\n            message = request.form['message']\n            rating = request.form['rating']\n            posted = False\n\n            reviews = Reviews(account_id=account_id, first_name=first_name, last_name=last_name, email=email,\n                                message=message, rating=rating, posted=posted)\n\n        else:\n            account_id = None\n            first_name = request.form['first_name']\n            last_name = request.form['last_name']\n            email = request.form['email']\n            message = request.form['message']\n            rating = request.form['rating']\n            posted = False\n\n            reviews = Reviews(account_id=account_id, first_name=first_name, last_name=last_name, email=email,\n                                message=message, rating=rating, posted=posted)\n\n        db.session.add(reviews)\n        db.session.commit()\n\n        flash(f'Your review was received! ATB will post it shortly.', 'success')\n        return redirect(url_for('ReviewForm'))\n\n        # Address issue where unsupported HTTP request method is attempted\n    flash(f'Invalid request. Please contact support if this problem persists.', 'error')\n    return redirect(url_for('homePage'))\n\n\n@app.route('/ReviewsLog')\n@login_required\n@role_required(['ADMIN', 'EMPLOYEE'])\ndef reviews_view_all():\n   reviews = Reviews.query.order_by(Reviews.review_id) \\\n       .all()\n   return render_template('ReviewsLog.html', reviews=reviews)\n\n@app.route('/ReviewsLog/Delete/<int:review_id>')\n@login_required\n@role_required(['ADMIN'])\ndef review_delete(review_id):\n   reviews = Reviews.query.filter_by(review_id=review_id).first()\n   if reviews:\n       db.session.delete(reviews)\n       db.session.commit()\n       flash(f'{review_id} was successfully deleted!', 'success')\n   else:\n       flash(f'Delete failed! Review could not be found.', 'error')\n\n   return redirect(url_for('reviews_view_all'))\n\n@app.route('/ReviewsLog/Post/<int:review_id>')\n@login_required\n@role_required(['ADMIN'])\ndef review_post(review_id):\n   reviews = Reviews.query.filter_by(review_id=review_id).first()\n   if reviews:\n       if reviews.posted == False:\n           reviews.posted = True\n           db.session.commit()\n           flash(f'{review_id} was successfully posted!', 'success')\n       else:\n           reviews.posted = False\n           db.session.commit()\n           flash(f'{review_id} was successfully un-posted!', 'success')\n   else:\n       flash(f'Post failed! Review could not be found.', 'error')\n\n   return redirect(url_for('reviews_view_all'))\n\n@app.route('/LogIn', methods = ['GET', 'POST'])\n# def LogInScreen():\n#     if request.method == 'POST':\n#         return render_template('Log-In-Screen.html', form_submitted=True)\n#     else:\n#         return render_template('Log-In-Screen.html')\ndef LogIn():\n   default_route_function = 'Shop'\n   default_user_route_function = 'homePage'\n\n   if request.method == 'GET':\n       # Determine where to redirect user if they are already logged in\n       if current_user and current_user.is_authenticated:\n           if current_user.role in ['EMPLOYEE', 'ADMIN']:\n               return redirect(url_for(default_route_function))\n           elif current_user.role == 'STUDENT':\n               return redirect(url_for(default_user_route_function, user_id=0))\n       else:\n           redirect_route = request.args.get('next')\n           return render_template('Log-In-Screen.html', redirect_route=redirect_route)\n\n   elif request.method == 'POST':\n       username = request.form.get('username')\n       password = request.form.get('password')\n       redirect_route = request.form.get('redirect_route')\n\n       user = Credentials.query.filter_by(username=username).first()\n\n       # Validate user credentials and redirect them to initial destination\n       if user and check_password_hash(user.password, password):\n           login_user(user)\n\n           if current_user.role in ['EMPLOYEE', 'ADMIN']:\n               return redirect(redirect_route if redirect_route else url_for(default_route_function))\n           elif current_user.role == 'STUDENT':\n               return redirect(redirect_route if redirect_route else url_for(default_user_route_function, user_id=0))\n       else:\n           flash(f'Your login information was not correct. Please try again.', 'error')\n\n       return redirect(url_for('LogIn'))\n\n   return redirect(url_for('LogIn'))\n\n@app.route('/signup', methods=['GET', 'POST'])\ndef SignUp():\n\n    if request.method == 'GET':\n        return render_template('sign-up-page.html', action='create')\n\n    elif request.method == 'POST':\n       username = request.form['username']\n       password = request.form['password']\n       first_name = request.form['first_name']\n       last_name = request.form['last_name']\n       email = request.form['email']\n\n       sha_password = generate_password_hash(password, method='sha256', salt_length=8)\n\n       user = Credentials(username=username, password=sha_password, first_name=first_name, last_name=last_name,\n                           email=email)\n\n       db.session.add(user)\n       db.session.commit()\n       login_user(user)\n       flash(f'{username} was successfully added!', 'success')\n       return redirect(url_for('homePage'))\n\n\n   # Address issue where unsupported HTTP request method is attempted\n# flash(f'Invalid request. Please contact support if this problem persists.', 'error')\n# return redirect(url_for('SignUp'))\n\n@app.route('/logout')\n@login_required\ndef logout():\n    logout_user()\n    flash(f'You have been logged out.', category='success')\n    return redirect(url_for('homePage'))\n\n@app.route('/CheckOut', methods=['GET', 'POST'])\ndef CheckOut():\n    if request.method == 'POST':\n        # return render_template('CheckoutPage.html', form_submitted=True)\n        return render_template('Order Confirmation.html')\n    else:\n        return render_template('CheckoutPage.html')\n\n@app.route('/GenericProduct')\ndef GenProduct():\n    return render_template('GenericProductPage.html')\n\n@app.route('/RequestsLog')\n@login_required\n@role_required(['ADMIN', 'EMPLOYEE'])\ndef requests_view_all():\n   requests = Requests.query.order_by(Requests.request_id) \\\n       .all()\n   return render_template('Request Log.html', requests=requests)\n\n\n@app.route('/InventoryLog')\n@login_required\n@role_required(['ADMIN', 'MANAGER'])\ndef items_view_all():\n  items = InventoryInfo.query.order_by(InventoryInfo.item_name) \\\n      .all()\n  return render_template('Inventory Log.html', items=items)\n\n\n@app.route('/InventoryLog/update/<int:product_id>', methods=['GET', 'POST'])\n@login_required\n@role_required(['ADMIN', 'MANAGER'])\ndef item_edit(product_id):\n  if request.method == 'GET':\n      item = InventoryInfo.query.filter_by(product_id=product_id).first()\n\n\n      if item:\n          return render_template('Input_Inventory2.html', item=item, action='update')\n\n      else:\n          flash(f'Item attempting to be edited could not be found!', 'error')\n\n  elif request.method == 'POST':\n      item = InventoryInfo.query.filter_by(product_id=product_id).first()\n\n      if item:\n          item.item_name = request.form['item_name']\n          item.xsmall = request.form['xsmall']\n          item.small = request.form['small']\n          item.medium = request.form['medium']\n          item.large = request.form['large']\n          item.xlarge = request.form['xlarge']\n          item.xxlarge = request.form['xxlarge']\n          item.price = request.form['price']\n          item.desc = request.form['desc']\n          image = request.files['image']\n\n          if('delete_product_image' in request.form or image != '') and 'current_product_image' != '' :\n              try:\n                os.remove(os.path.join(basedir, app.config['PRODUCT_UPLOAD_PATH'], item.image))\n                item.image = ''\n              except:\n                pass\n\n              filename = secure_filename(item.item_name + '-' + image.filename)\n\n              if image.filename != '':\n                  image.save(os.path.join(basedir, app.config['PRODUCT_UPLOAD_PATH'], filename))\n                  item.image = filename if image else ''\n\n          db.session.commit()\n          flash(f'{item.item_name} was successfully updated!', 'success')\n      else:\n          flash(f'Item attempting to be edited could not be found!', 'error')\n\n      return redirect(url_for('items_view_all'))\n\n\n  # Address issue where unsupported HTTP request method is attempted\n  flash(f'Invalid request. Please contact support if this problem persists.', 'error')\n  return redirect(url_for('items_view_all'))\n\n\n@app.route('/InventoryLog/delete/<int:product_id>')\n@login_required\n@role_required(['ADMIN'])\ndef item_delete(product_id):\n  item = InventoryInfo.query.filter_by(product_id=product_id).first()\n  if item:\n        try:\n            os.remove(os.path.join(app.config['PRODUCT_UPLOAD_PATH'], item.image))\n        except FileNotFoundError:\n            pass\n        db.session.delete(item)\n        db.session.commit()\n        flash(f'{item} was successfully deleted!', 'success')\n  else:\n        flash(f'Delete failed! Item could not be found.', 'error')\n\n  return redirect(url_for('items_view_all'))\n\n@app.route('/InventoryInput', methods=['GET', 'POST'])\n@login_required\n@role_required(['ADMIN', 'MANAGER'])\ndef inventory_entry():\n\n  collections = Collections.query.order_by(Collections.collection_id) \\\n        .all()\n\n  if request.method == 'GET':\n      return render_template('Input_Inventory.html', action='create', collections=collections)\n  elif request.method == 'POST':\n      item_name = request.form['item_name']\n      xsmall = request.form['xsmall']\n      small = request.form['small']\n      medium = request.form['medium']\n      large = request.form['large']\n      xlarge = request.form['xlarge']\n      xxlarge = request.form['xxlarge']\n      price = request.form['price']\n      desc = request.form['desc']\n      image = request.files['image']\n      filename = secure_filename(item_name + '-' + image.filename)\n\n      if image.filename != '':\n          image.save(os.path.join(basedir, app.config['PRODUCT_UPLOAD_PATH'], filename))\n\n      items = InventoryInfo(item_name=item_name, xsmall=xsmall, small=small, medium=medium, large=large, xlarge=xlarge,\n                        xxlarge=xxlarge, price=price, desc=desc, image=filename if image else '')\n\n      db.session.add(items)\n      db.session.commit()\n      flash(f'{item_name} was successfully added!', 'success')\n      return redirect(url_for('items_view_all'))\n\n\n\n\n  # Address issue where unsupported HTTP request method is attempted\n  flash(f'Invalid request. Please contact support if this problem persists.', 'error')\n  return redirect(url_for('homePage'))\n\n# might need for input inventory2\n# @app.route('/product/update/<int:product_id>', methods=['GET', 'POST'])\n# @login_required\n# @role_required(['ADMIN', 'MANAGER'])\n# def product_edit(product_id):\n#     if request.method == 'GET':\n#         product = items_view_all.query.filter_by(product_id=product_id).first()\n#\n#         if product:\n#             return render_template('Input_Inventory2.html', product=product, action='update')\n#\n#         else:\n#             flash(f'Product attempting to be edited could not be found!', 'error')\n#\n#     elif request.method == 'POST':\n#         product = items_view_all.query.filter_by(product_id=product_id).first()\n#\n#         if product:\n#             product.product_name = request.form['product_name']\n#             product.product_code = request.form['product_code']\n#             product.product_description = request.form['product_description']\n#             product.product_price = request.form['product_price']\n#             product_image = request.files['product_image']\n#\n#             # When a new image is provided, or there is a desire to delete the current image, attempt to delete it\n#             if ('delete_product_image' in request.form or product_image != '') and 'current_product_image' != '' :\n#                 try:\n#                     os.remove(os.path.join(basedir, app.config['PRODUCT_UPLOAD_PATH'], product.product_image))\n#                     product.product_image = ''\n#                 except:\n#                     pass # Nothing to do as file is no longer being stored\n#\n#\n#                 product_filename = secure_filename(product.product_code + '-' + product_image.filename)  # prepend unique product code to avoid filename collisions\n#\n#                 if product_image.filename != '':\n#                     product_image.save(os.path.join(basedir, app.config['PRODUCT_UPLOAD_PATH'], product_filename))\n#                     product.product_image = product_filename if product_image else ''\n#\n#             db.session.commit()\n#             flash(f'{product.product_name} was successfully updated!', 'success')\n#         else:\n#             flash(f'Product attempting to be edited could not be found!', 'error')\n#\n#         return redirect(url_for('Inventory Log'))\n#\n#     # Address issue where unsupported HTTP request method is attempted\n#     flash(f'Invalid request. Please contact support if this problem persists.', 'error')\n#     return redirect(url_for('Inventory Log'))\n\n@app.route('/OrderConfirm')\ndef OrderConfirm():\n    return render_template('Order Confirmation.html')\n\n@app.route('/OrderDetails')\ndef OrderDetails():\n    return render_template('OrderDetails.html')\n\n\n@app.route('/SalesTracker')\n@login_required\ndef SalesTracker():\n    return render_template('Sales Tracker.html')\n\n\n\n@app.route('/banner')\ndef Banner():\n    return render_template('Banner.html')\n\n# if employee is logged in, this needs to not say only admins have access\n@app.route('/Admin/Create/LogIn', methods=['GET', 'POST'])\n@login_required\n@role_required(['ADMIN'])\ndef Admin_Login():\n\n    if request.method == 'GET':\n        return render_template('Admin_Login.html', action='create')\n\n    elif request.method == 'POST':\n       username = request.form['username']\n       password = request.form['password']\n       first_name = request.form['first_name']\n       last_name = request.form['last_name']\n       email = request.form['email']\n       role = request.form['role']\n\n       sha_password = generate_password_hash(password, method='sha256', salt_length=8)\n\n       user = Credentials(username=username, password=sha_password, first_name=first_name, last_name=last_name,\n                           email=email, role=role)\n\n       db.session.add(user)\n       db.session.commit()\n       flash(f'{username} was successfully added!', 'success')\n       return redirect(url_for('homePage'))\n\n# @app.route('/cart')\n# def Cart():\n#     return render_template('cart.html')\n\n@app.route('/cart/clear')\n\n@login_required\ndef clear_cart():\n    if 'cart' in session:\n        del(session['cart'])\n        flash(f\"Cart Cleared\", 'success')\n    else:\n        flash(f\"Cart already empty\", 'error')\n    return redirect(url_for('Shop'))\n\n@app.route('/cart/add/<int:product_id>', methods=['GET','POST'])\n@login_required\ndef cart_add(product_id):\n    product = InventoryInfo.query.filter_by(product_id=product_id).first()\n    if 'product_quantity' in request.form:\n        product_quantity = int(request.form['product_quantity'])\n    elif request.method == 'GET':\n        product_quantity = 1\n\n    if product:\n        if 'cart' not in session:\n            session['cart'] = []\n\n        size = request.form['size']\n\n        found_item = next((item for item in session['cart'] if item['product_id'] == product_id), None)\n        if found_item:\n            found_item['product_quantity'] += product_quantity\n\n            if found_item['product_quantity'] > app.config['MAX_QUANTITY_PER_ITEM']:\n                found_item['product_quantity'] = app.config['MAX_QUANTITY_PER_ITEM']\n                flash(f\"You cannot exceed more than {app.config['MAX_QUANTITY_PER_ITEM']} of the same item.\")\n\n        else:\n            session['cart'].append(\n                {'product_id': product.product_id, 'item_name': product.item_name, 'size':size, 'price': product.price}\n            )\n\n        session['cart_total'] = sum(item['product_price']*item['product_quantity'] for item in session['cart'])\n\n        flash(f\"{product.product_name} has been successfully added to your cart.\", 'success')\n        return redirect(url_for('cart_view'))\n    else:\n        flash(f'Product could not be found. Please contact support if this problem persists.', 'error')\n\n@app.route('/cart/remove/<int:index>', methods=['GET'])\n@login_required\ndef cart_remove(index):\n    if 'cart' in session:\n        if index < len(session['cart']):\n            product_name = session['cart'][index]['product_name']\n            session['cart'].pop(index)\n            flash(f\"{product_name} has been successfully removed from your cart.\", 'success')\n\n        else:\n            flash(f'Product is not in the cart and could not be removed.', 'error')\n\n    session['cart_total'] = sum(item['product_price'] * item['product_quantity'] for item in session['cart'])\n\n    return redirect(url_for('cart2'))\n\n@app.route('/cart', methods=['GET', 'POST'])\n@login_required\ndef cart_view():\n    if 'cart' in session:\n        return render_template('cart2.html', products=session['cart'], cart_count=len(session['cart']), cart_total=session['cart_total'])\n    else:\n        return render_template('cart2.html', cart_count=0)\n\n@app.route('/CollectionsLog')\n@login_required\n@role_required(['ADMIN', 'EMPLOYEE'])\ndef collections_view_all():\n   collection = Collections.query.order_by(Collections.collection_id) \\\n       .all()\n   return render_template('Collections Log.html', collection=collection)\n\n@app.route('/CollectionsInput', methods=['GET', 'POST'])\n@login_required\n@role_required(['ADMIN', 'EMPLOYEE'])\ndef collections_entry():\n   if request.method == 'GET':\n       return render_template('Input_Collections.html', action='create')\n   elif request.method == 'POST':\n       collection_name = request.form['collection_name']\n\n       collection = Collections(collection_name=collection_name)\n\n       db.session.add(collection)\n       db.session.commit()\n       flash(f'{collection_name} was successfully added!', 'success')\n       return redirect(url_for('collections_view_all'))\n\n   # Address issue where unsupported HTTP request method is attempted\n   flash(f'Invalid request. Please contact support if this problem persists.', 'error')\n   return redirect(url_for('homePage'))\n\n@app.route('/CollectionsLog/Update/<int:collection_id>', methods=['GET', 'POST'])\n@login_required\n@role_required(['ADMIN', 'EMPLOYEE'])\ndef collection_edit(collection_id):\n   if request.method == 'GET':\n       collection = Collections.query.filter_by(collection_id=collection_id).first()\n\n       if collection:\n           # collection_id = collection_id -= 1 OR SOMETHING LIKE THIS????????\n           return render_template('Input_Collections.html', collection_id=collection_id, collection=collection, action='update')\n\n       else:\n           flash(f'Collection attempting to be edited could not be found!', 'error')\n\n   elif request.method == 'POST':\n       collection = Collections.query.filter_by(collection_id=collection_id).first()\n\n       if collection:\n           collection.collection_name = request.form['collection_name']\n\n           db.session.commit()\n           flash(f'{collection.collection_name} was successfully updated!', 'success')\n       else:\n           flash(f'Collection attempting to be edited could not be found!', 'error')\n\n\n       return redirect(url_for('collections_view_all'))\n\n\n   # Address issue where unsupported HTTP request method is attempted\n   flash(f'Invalid request. Please contact support if this problem persists.', 'error')\n   return redirect(url_for('collections_view_all'))\n\n\n@app.route('/CollectionsLog/Delete/<int:collection_id>')\n@login_required\n@role_required(['ADMIN'])\ndef collection_delete(collection_id):\n   collection = Collections.query.filter_by(collection_id=collection_id).first()\n   if collection:\n       db.session.delete(collection)\n       db.session.commit()\n       flash(f'{collection_id} was successfully deleted!', 'success')\n   else:\n       flash(f'Delete failed! Collection could not be found.', 'error')\n\n   return redirect(url_for('collections_view_all'))\n\nif __name__ == '__main__':\n    app.run()\n\n\n# @errors.app_errorhandler(404)\n# def error_404(error):\n#     return render_template('errors/404.html'), 404\n#\n# @errors.app_errorhandler(403)\n# def error_403(error):\n#     return render_template('errors/403.html'), 403\n#\n# @errors.app_errorhandler(500)\n# def error_500(error):\n#     return render_template('errors/500.html'), 500\n\n\n\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app.py b/app.py
--- a/app.py	(revision 321a746c31d68b1b7e038d305be9d93bd1084060)
+++ b/app.py	(date 1682981631236)
@@ -174,20 +174,20 @@
 @login_required
 @role_required(['ADMIN'])
 def review_post(review_id):
-   reviews = Reviews.query.filter_by(review_id=review_id).first()
-   if reviews:
-       if reviews.posted == False:
-           reviews.posted = True
-           db.session.commit()
-           flash(f'{review_id} was successfully posted!', 'success')
-       else:
-           reviews.posted = False
-           db.session.commit()
-           flash(f'{review_id} was successfully un-posted!', 'success')
-   else:
+    reviews = Reviews.query.filter_by(review_id=review_id).first()
+    if reviews:
+        if reviews.posted == False:
+            reviews.posted = True
+            db.session.commit()
+            flash(f'{review_id} was successfully posted!', 'success')
+        else:
+            reviews.posted = False
+            db.session.commit()
+            flash(f'{review_id} was successfully un-posted!', 'success')
+    else:
        flash(f'Post failed! Review could not be found.', 'error')
 
-   return redirect(url_for('reviews_view_all'))
+    return redirect(url_for('reviews_view_all'))
 
 @app.route('/LogIn', methods = ['GET', 'POST'])
 # def LogInScreen():
Index: templates/Shop.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{% extends \"base.html\" %}\n\n{% block page_title %} Shop {% endblock %}\n\n<!--{% block page_head %}-->\n<!--Welcome to ATB Shop!-->\n<!--{% endblock %}-->\n{% block page_content %}\n\n<div class=\"row\">\n\t{% for item  in items %}\n\t<div class=\"col-lg-3\">\n\t\t<div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n\t\t\t<div class=\"thumbnail\">\n                {% if product['product_image'] %}\n<!-- inserting picture for product -->\n\t\t\t\t<a href=\"{{ url_for('GenProduct', product_id=item.product_id) }}\">\n\t\t\t\t\t<img class=\"img-fluid\" src=\"{{ url_for('static', filename='/products/' + product['image']) }}\" alt=\"Picture of {{ item['item_name'] }}\">\n\t\t\t\t</a>\n                {% endif %}\n\t\t\t\t<div class=\"caption text-center\">\n\t\t\t\t\t<h4 class=\"bold\">{{ item.item_name }}</h4>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t{{ item.desc }}\n\t\t\t\t\t</p>\n\t\t\t\t\t<hr>\n\t\t\t\t\t<p>\n                        <div>\n                            <a href=\"{{ url_for('GenProduct', product_id=item.product_id) }}\" class=\"btn btn-primary btn-sm\">View</a>\n                        </div>\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n    <div class=\"col-lg-1\">\n        &nbsp;\n    </div>\n\t{% endfor %}\n</div>\n\n\n{% endblock %}\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/Shop.html b/templates/Shop.html
--- a/templates/Shop.html	(revision 321a746c31d68b1b7e038d305be9d93bd1084060)
+++ b/templates/Shop.html	(date 1682966787267)
@@ -12,7 +12,7 @@
 	<div class="col-lg-3">
 		<div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
 			<div class="thumbnail">
-                {% if product['product_image'] %}
+                {% if product['products'] %}
 <!-- inserting picture for product -->
 				<a href="{{ url_for('GenProduct', product_id=item.product_id) }}">
 					<img class="img-fluid" src="{{ url_for('static', filename='/products/' + product['image']) }}" alt="Picture of {{ item['item_name'] }}">
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"b07f119a-e867-4f5e-9a38-dc4f2ee5ec30\" name=\"Changes\" comment=\"Fixed issue with review form not submitting\">\n      <change afterPath=\"$PROJECT_DIR$/.idea/30Pull.iml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/app.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app.py\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/models.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/models.py\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/templates/ReviewForm.html\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/templates/ReviewForm.html\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/templates/ReviewsLog.html\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/templates/ReviewsLog.html\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"HTML File\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"FlaskConsoleOptions\" custom-start-script=\"import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\\nApp: %s [%s]\\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))\">\n    <envs>\n      <env key=\"FLASK_APP\" value=\"app\" />\n    </envs>\n    <option name=\"myCustomStartScript\" value=\"import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\\nApp: %s [%s]\\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))\" />\n    <option name=\"myEnvs\">\n      <map>\n        <entry key=\"FLASK_APP\" value=\"app\" />\n      </map>\n    </option>\n  </component>\n  <component name=\"Git.Rebase.Settings\">\n    <option name=\"NEW_BASE\" value=\"origin/main\" />\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"GitHubPullRequestSearchHistory\">{\n  &quot;lastFilter&quot;: {\n    &quot;state&quot;: &quot;OPEN&quot;\n  }\n}</component>\n  <component name=\"GithubPullRequestsUISettings\">\n    <option name=\"selectedUrlAndAccountId\">\n      <UrlAndAccount>\n        <option name=\"accountId\" value=\"682f582c-9e77-4729-baf9-a93006c533f3\" />\n        <option name=\"url\" value=\"https://github.com/jbonoUMD/team08spring2023bmgt407.git\" />\n      </UrlAndAccount>\n    </option>\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProjectId\" id=\"2N3dhsCNzjT1uwD9MOMTkEk9dnu\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\"><![CDATA[{\n  \"keyToString\": {\n    \"DefaultHtmlFileTemplate\": \"HTML File\",\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\n    \"WebServerToolWindowFactoryState\": \"false\",\n    \"node.js.detected.package.eslint\": \"true\",\n    \"node.js.detected.package.tslint\": \"true\",\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\n    \"vue.rearranger.settings.migration\": \"true\"\n  },\n  \"keyToStringList\": {\n    \"GitStage.ChangesTree.GroupingKeys\": [\n      \"directory\",\n      \"module\",\n      \"repository\"\n    ]\n  }\n}]]></component>\n  <component name=\"RecentsManager\">\n    <key name=\"CopyFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$\" />\n    </key>\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/static/images\" />\n    </key>\n  </component>\n  <component name=\"RunManager\" selected=\"Python.30Pull\">\n    <configuration name=\"11Pull\" type=\"PythonConfigurationType\" factoryName=\"Python\">\n      <module name=\"11Pull\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/app.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"30Pull\" type=\"PythonConfigurationType\" factoryName=\"Python\">\n      <module name=\"30Pull\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/app.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"April24Pull\" type=\"PythonConfigurationType\" factoryName=\"Python\">\n      <module name=\"team08spring2023bmgt407\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/app.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"team08spring2023bmgt407\" type=\"PythonConfigurationType\" factoryName=\"Python\">\n      <module name=\"team08spring2023bmgt407\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/app.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"team08spring2023bmgt407\" type=\"Python.FlaskServer\">\n      <module name=\"team08spring2023bmgt407\" />\n      <option name=\"target\" value=\"$PROJECT_DIR$/app.py\" />\n      <option name=\"targetType\" value=\"PATH\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\n      <option name=\"launchJavascriptDebuger\" value=\"false\" />\n      <method v=\"2\" />\n    </configuration>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"b07f119a-e867-4f5e-9a38-dc4f2ee5ec30\" name=\"Changes\" comment=\"\" />\n      <created>1678811835939</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1678811835939</updated>\n      <workItem from=\"1678811839462\" duration=\"8376000\" />\n      <workItem from=\"1678896822647\" duration=\"4435000\" />\n      <workItem from=\"1678914086423\" duration=\"6235000\" />\n      <workItem from=\"1678995726298\" duration=\"5579000\" />\n      <workItem from=\"1679017763874\" duration=\"4939000\" />\n      <workItem from=\"1680884137222\" duration=\"25000\" />\n      <workItem from=\"1680884410797\" duration=\"650000\" />\n      <workItem from=\"1680891442123\" duration=\"1194000\" />\n      <workItem from=\"1680893390201\" duration=\"11734000\" />\n      <workItem from=\"1681136390140\" duration=\"5724000\" />\n      <workItem from=\"1681319491711\" duration=\"882000\" />\n      <workItem from=\"1681479362300\" duration=\"468000\" />\n      <workItem from=\"1682375273103\" duration=\"9982000\" />\n      <workItem from=\"1682432491159\" duration=\"670000\" />\n      <workItem from=\"1682551869141\" duration=\"2087000\" />\n      <workItem from=\"1682706802134\" duration=\"8531000\" />\n      <workItem from=\"1682721279912\" duration=\"5651000\" />\n      <workItem from=\"1682783124446\" duration=\"4559000\" />\n      <workItem from=\"1682874951257\" duration=\"4094000\" />\n      <workItem from=\"1682890134762\" duration=\"8000\" />\n      <workItem from=\"1682890160073\" duration=\"11646000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"Creation of inventory management page&#10;Used table template from bootstrap&#10;need to fill in values and add styling\">\n      <created>1678819151825</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1678819151825</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"Added an inventory input table &#10;need to fill in values and add styling for table&#10;need to fix formatting of the buttons\">\n      <created>1678827389300</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1678827389300</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"Updated the form to input inventory.\">\n      <created>1678897417944</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1678897417944</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"Added header, put input form and table into containers\">\n      <created>1678898593881</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1678898593881</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"Updated navbar per Joe's changes.\">\n      <created>1678899543333</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1678899543333</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"Updated navbar per Joe's changes.\">\n      <created>1678899551737</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1678899551737</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"Changed the homepage to replicate a different screen. working on getting button to correct position, making fonts the ideal sizes, and will put in a slider of images below start shopping button\">\n      <created>1678918957733</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1678918957733</updated>\n    </task>\n    <task id=\"LOCAL-00008\" summary=\"added carousel templated\">\n      <created>1678995356846</created>\n      <option name=\"number\" value=\"00008\" />\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1678995356846</updated>\n    </task>\n    <task id=\"LOCAL-00009\" summary=\"continued working on formatting\">\n      <created>1679003779224</created>\n      <option name=\"number\" value=\"00009\" />\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1679003779224</updated>\n    </task>\n    <task id=\"LOCAL-00010\" summary=\"updated on formatting\">\n      <created>1679020804790</created>\n      <option name=\"number\" value=\"00010\" />\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1679020804790</updated>\n    </task>\n    <task id=\"LOCAL-00011\" summary=\"When we updated our flask the image formatting got messed up. Fixed routes to images.\">\n      <created>1679255727033</created>\n      <option name=\"number\" value=\"00011\" />\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1679255727033</updated>\n    </task>\n    <task id=\"LOCAL-00012\" summary=\"shop page edits and alignment\">\n      <created>1681141671420</created>\n      <option name=\"number\" value=\"00012\" />\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1681141671420</updated>\n    </task>\n    <task id=\"LOCAL-00013\" summary=\"Made the inventory form in the middle of the screen and added new child template features to Inventory Management.html.\">\n      <created>1681315863225</created>\n      <option name=\"number\" value=\"00013\" />\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1681315863225</updated>\n    </task>\n    <task id=\"LOCAL-00014\" summary=\"order confirmation page fixing image\">\n      <created>1681318152232</created>\n      <option name=\"number\" value=\"00014\" />\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1681318152232</updated>\n    </task>\n    <task id=\"LOCAL-00015\" summary=\"order confirmation page edits to button and bottom image\">\n      <created>1681318828826</created>\n      <option name=\"number\" value=\"00015\" />\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1681318828826</updated>\n    </task>\n    <task id=\"LOCAL-00016\" summary=\"adjusted formatting for footer\">\n      <created>1681401264957</created>\n      <option name=\"number\" value=\"00016\" />\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1681401264957</updated>\n    </task>\n    <task id=\"LOCAL-00017\" summary=\"Fixing home page format\">\n      <created>1681479314582</created>\n      <option name=\"number\" value=\"00017\" />\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1681479314582</updated>\n    </task>\n    <task id=\"LOCAL-00018\" summary=\"Created new dropdown button to account for different collections.\">\n      <created>1682377087407</created>\n      <option name=\"number\" value=\"00018\" />\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1682377087407</updated>\n    </task>\n    <task id=\"LOCAL-00019\" summary=\"Adjusting postioning so does not move when screen resized. Still need to fix map on right side and image container under button\">\n      <created>1682549189886</created>\n      <option name=\"number\" value=\"00019\" />\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1682549189886</updated>\n    </task>\n    <task id=\"LOCAL-00020\" summary=\"edits to generic product page and shop so it will post the product the customer selected\">\n      <created>1682879120052</created>\n      <option name=\"number\" value=\"00020\" />\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1682879120052</updated>\n    </task>\n    <task id=\"LOCAL-00021\" summary=\"adding size radio for product page\">\n      <created>1682879462628</created>\n      <option name=\"number\" value=\"00021\" />\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1682879462628</updated>\n    </task>\n    <task id=\"LOCAL-00022\" summary=\"Fixed issue with review form not submitting\">\n      <created>1682885970212</created>\n      <option name=\"number\" value=\"00022\" />\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1682885970212</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"23\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"Creation of inventory management page&#10;Used table template from bootstrap&#10;need to fill in values and add styling\" />\n    <MESSAGE value=\"Added an inventory input table &#10;need to fill in values and add styling for table&#10;need to fix formatting of the buttons\" />\n    <MESSAGE value=\"Updated the form to input inventory.\" />\n    <MESSAGE value=\"Added header, put input form and table into containers\" />\n    <MESSAGE value=\"Updated navbar per Joe's changes.\" />\n    <MESSAGE value=\"Changed the homepage to replicate a different screen. working on getting button to correct position, making fonts the ideal sizes, and will put in a slider of images below start shopping button\" />\n    <MESSAGE value=\"added carousel templated\" />\n    <MESSAGE value=\"continued working on formatting\" />\n    <MESSAGE value=\"updated on formatting\" />\n    <MESSAGE value=\"When we updated our flask the image formatting got messed up. Fixed routes to images.\" />\n    <MESSAGE value=\"shop page edits and alignment\" />\n    <MESSAGE value=\"Made the inventory form in the middle of the screen and added new child template features to Inventory Management.html.\" />\n    <MESSAGE value=\"order confirmation page fixing image\" />\n    <MESSAGE value=\"order confirmation page edits to button and bottom image\" />\n    <MESSAGE value=\"adjusted formatting for footer\" />\n    <MESSAGE value=\"Fixing home page format\" />\n    <MESSAGE value=\"Created new dropdown button to account for different collections.\" />\n    <MESSAGE value=\"Adjusting postioning so does not move when screen resized. Still need to fix map on right side and image container under button\" />\n    <MESSAGE value=\"edits to generic product page and shop so it will post the product the customer selected\" />\n    <MESSAGE value=\"adding size radio for product page\" />\n    <MESSAGE value=\"Fixed issue with review form not submitting\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Fixed issue with review form not submitting\" />\n  </component>\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\n    <SUITE FILE_PATH=\"coverage/11Pull$team08spring2023bmgt407.coverage\" NAME=\"team08spring2023bmgt407 Coverage Results\" MODIFIED=\"1681503784238\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"\" />\n    <SUITE FILE_PATH=\"coverage/30Pull$30Pull.coverage\" NAME=\"30Pull Coverage Results\" MODIFIED=\"1682908147988\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"\" />\n    <SUITE FILE_PATH=\"coverage/April24Pull$April24Pull.coverage\" NAME=\"April24Pull Coverage Results\" MODIFIED=\"1682433140671\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"\" />\n    <SUITE FILE_PATH=\"coverage/team08spring2023bmgt407$Flask__app_py_.coverage\" NAME=\"Flask (app.py) Coverage Results\" MODIFIED=\"1681146471589\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"\" />\n    <SUITE FILE_PATH=\"coverage/11Pull$11Pull.coverage\" NAME=\"11Pull Coverage Results\" MODIFIED=\"1681322004954\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"\" />\n    <SUITE FILE_PATH=\"coverage/team08spring2023bmgt407$11Pull.coverage\" NAME=\"11Pull Coverage Results\" MODIFIED=\"1682377134447\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"\" />\n    <SUITE FILE_PATH=\"coverage/team08spring2023bmgt407$team08spring2023bmgt407.coverage\" NAME=\"team08spring2023bmgt407 Coverage Results\" MODIFIED=\"1682887367312\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\n    <SUITE FILE_PATH=\"coverage/team08spring2023bmgt407$April24Pull.coverage\" NAME=\"April24Pull Coverage Results\" MODIFIED=\"1682637962489\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 321a746c31d68b1b7e038d305be9d93bd1084060)
+++ b/.idea/workspace.xml	(date 1682982538413)
@@ -4,13 +4,15 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="b07f119a-e867-4f5e-9a38-dc4f2ee5ec30" name="Changes" comment="Fixed issue with review form not submitting">
-      <change afterPath="$PROJECT_DIR$/.idea/30Pull.iml" afterDir="false" />
+    <list default="true" id="b07f119a-e867-4f5e-9a38-dc4f2ee5ec30" name="Changes" comment="">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/ATB2.db" beforeDir="false" afterPath="$PROJECT_DIR$/ATB2.db" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/app.py" beforeDir="false" afterPath="$PROJECT_DIR$/app.py" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/models.py" beforeDir="false" afterPath="$PROJECT_DIR$/models.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/templates/Request Log.html" beforeDir="false" afterPath="$PROJECT_DIR$/templates/Request Log.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/templates/RequestForm.html" beforeDir="false" afterPath="$PROJECT_DIR$/templates/RequestForm.html" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/templates/ReviewForm.html" beforeDir="false" afterPath="$PROJECT_DIR$/templates/ReviewForm.html" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/templates/ReviewsLog.html" beforeDir="false" afterPath="$PROJECT_DIR$/templates/ReviewsLog.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/templates/Shop.html" beforeDir="false" afterPath="$PROJECT_DIR$/templates/Shop.html" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -49,8 +51,8 @@
   <component name="GithubPullRequestsUISettings">
     <option name="selectedUrlAndAccountId">
       <UrlAndAccount>
-        <option name="accountId" value="682f582c-9e77-4729-baf9-a93006c533f3" />
-        <option name="url" value="https://github.com/jbonoUMD/team08spring2023bmgt407.git" />
+        <option name="accountId" value="1eb148cf-7c42-4cd6-87e2-f386114b6b01" />
+        <option name="url" value="https://github.com/jbonoUMD/team08spring2023bmgt407" />
       </UrlAndAccount>
     </option>
   </component>
@@ -62,27 +64,27 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "DefaultHtmlFileTemplate": "HTML File",
-    "RunOnceActivity.OpenProjectViewOnStart": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
-    "WebServerToolWindowFactoryState": "false",
-    "node.js.detected.package.eslint": "true",
-    "node.js.detected.package.tslint": "true",
-    "node.js.selected.package.eslint": "(autodetect)",
-    "node.js.selected.package.tslint": "(autodetect)",
-    "vue.rearranger.settings.migration": "true"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;DefaultHtmlFileTemplate&quot;: &quot;HTML File&quot;,
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
+    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
+    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
+    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
+    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
+    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
+    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
   },
-  "keyToStringList": {
-    "GitStage.ChangesTree.GroupingKeys": [
-      "directory",
-      "module",
-      "repository"
+  &quot;keyToStringList&quot;: {
+    &quot;GitStage.ChangesTree.GroupingKeys&quot;: [
+      &quot;directory&quot;,
+      &quot;module&quot;,
+      &quot;repository&quot;
     ]
   }
-}]]></component>
+}</component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
       <recent name="$PROJECT_DIR$" />
@@ -423,7 +425,7 @@
   </component>
   <component name="com.intellij.coverage.CoverageDataManagerImpl">
     <SUITE FILE_PATH="coverage/11Pull$team08spring2023bmgt407.coverage" NAME="team08spring2023bmgt407 Coverage Results" MODIFIED="1681503784238" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="" />
-    <SUITE FILE_PATH="coverage/30Pull$30Pull.coverage" NAME="30Pull Coverage Results" MODIFIED="1682908147988" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="" />
+    <SUITE FILE_PATH="coverage/30Pull$30Pull.coverage" NAME="30Pull Coverage Results" MODIFIED="1682982536081" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="" />
     <SUITE FILE_PATH="coverage/April24Pull$April24Pull.coverage" NAME="April24Pull Coverage Results" MODIFIED="1682433140671" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="" />
     <SUITE FILE_PATH="coverage/team08spring2023bmgt407$Flask__app_py_.coverage" NAME="Flask (app.py) Coverage Results" MODIFIED="1681146471589" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="" />
     <SUITE FILE_PATH="coverage/11Pull$11Pull.coverage" NAME="11Pull Coverage Results" MODIFIED="1681322004954" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="" />
